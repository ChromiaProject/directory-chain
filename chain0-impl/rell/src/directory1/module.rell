module;

import ^.common.*;
import .proposal.*;
import ^.container.container_op.*;
import ^.cluster.cluster_op.*;

/*
 * Directory1 is an enterprise dapp where the d1 dapp manages and controls creating and deleting clusters, containers and blockchains.
 * To run this dapp postchain must be started in managed mode and preferably using master/subnode configuration.
 */
struct module_args {
    initial_provider: pubkey;
    // actions_per_day: integer = 100; consider adding this module arg
}

// This operation will check that provider table is empty and if so add the provider supplied as module argument. And
// enable this first system provider.
operation init (initial_node_host:text, initial_node_port:integer, anchoring_config: gtv) {
	initialize_module(chain_context.args.initial_provider, initial_node_host, initial_node_port, 100, anchoring_config = anchoring_config);
}

operation update_provider(my_pubkey: pubkey, name?) {
    val me = require_provider(my_pubkey);
	require_provider_auth_with_rl(me);
    if (name != null) me.name = name;
}
