@test module;

import ^^.*;

function test_custom_majoriy_limit() {
    assert_equals(_compute_voting_result(45, 0, 100, 46), voting_result.pending);
    assert_equals(_compute_voting_result(45, 0, 100, 45), voting_result.approved);
    assert_equals(_compute_voting_result(0, 67, 100, 44), voting_result.rejected);
}

function test_majority_even() {
    assert_equals(_compute_voting_result(50, 0, 100, -1), voting_result.pending);
    assert_equals(_compute_voting_result(51, 0, 100, -1), voting_result.approved);
    assert_equals(_compute_voting_result(0, 50, 100, -1), voting_result.rejected);
}

function test_majority_odd() {
    assert_equals(_compute_voting_result(51, 0, 101, -1), voting_result.approved);
    assert_equals(_compute_voting_result(0, 50, 101, -1), voting_result.pending);
    assert_equals(_compute_voting_result(0, 51, 101, -1), voting_result.rejected);
}

function test_super_majority_divisible_by_3() {
    assert_equals(_compute_voting_result(2, 0, 3, 0), voting_result.pending);
    assert_equals(_compute_voting_result(3, 0, 3, 0), voting_result.approved);
    assert_equals(_compute_voting_result(0, 1, 3, 0), voting_result.rejected);
    assert_equals(_compute_voting_result(66, 0, 99, 0), voting_result.pending);
    assert_equals(_compute_voting_result(67, 0, 99, 0), voting_result.approved);
    assert_equals(_compute_voting_result(0, 33, 99, 0), voting_result.rejected);
}

function test_super_majority_non_divisible_by_3() {
    assert_equals(_compute_voting_result(2, 0, 4, 0), voting_result.pending);
    assert_equals(_compute_voting_result(3, 0, 4, 0), voting_result.approved);
    assert_equals(_compute_voting_result(0, 2, 4, 0), voting_result.rejected);
    assert_equals(_compute_voting_result(66, 33, 100, 0), voting_result.pending);
    assert_equals(_compute_voting_result(67, 0, 100, 0), voting_result.approved);
    assert_equals(_compute_voting_result(0, 34, 100, 0), voting_result.rejected);
}
