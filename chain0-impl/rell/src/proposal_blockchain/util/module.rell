module;

function validate_blockchain_configuration(config_data: byte_array, signers: boolean, header_hash: boolean) {
    val config_map = map<text, gtv>.from_gtv(gtv.from_bytes(config_data));
    if (signers) {
        require("signers" not in config_map, "Configuration must not contain \"signers\"");
    }
    if (header_hash) {
        require("config_consensus_strategy" in config_map,
            "Configuration must contain \"config_consensus_strategy\"=\"HEADER_HASH\"");
        require(config_map["config_consensus_strategy"] == "HEADER_HASH".to_gtv(),
            "Configuration must contain \"config_consensus_strategy\"=\"HEADER_HASH\"");
    }
}

function make_config_unique(config_data: byte_array): byte_array {
    val config_map = map<text, gtv>.from_gtv(gtv.from_bytes(config_data));

    val chain0_block_rid = if (op_context.block_height >= 1)
        block @ { .block_height == op_context.block_height - 1 } ( .block_rid )
    else
        chain_context.blockchain_rid;
    config_map["chain0_last_block_rid"] = chain0_block_rid.to_gtv();
    config_map["chain0_block_height"] = op_context.block_height.to_gtv();
    config_map["chain0_tx_rid"] = op_context.transaction.tx_rid.to_gtv();
    config_map["chain0_op_index"] = op_context.op_index.to_gtv();

    return config_map.to_gtv().to_bytes();
}
