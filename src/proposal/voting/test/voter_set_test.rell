@test module;

import ^^.*;
import ^^^^.common.test.ops.*;

val voter_1 = rell.test.keypairs.alice;
val voter_2 = rell.test.keypairs.bob;

function create_provider(pubkey) {
    rell.test.tx().op(create_test_provider("", pubkey, provider_tier.COMMUNITY_NODE_PROVIDER)).run();
}

function test_create_voter_set_with_non_provider() {
    create_provider(voter_1.pub);
    val members = list<pubkey>();
    members.add(voter_2.pub);
    rell.test.tx().op(create_voter_set(voter_1.pub, "foo", 0, members, null)).sign(voter_1).run_must_fail();
}

function test_create_voter_set() {
    create_provider(voter_1.pub);

    val members = list<pubkey>();
    members.add(voter_1.pub);
    rell.test.tx().op(create_voter_set(voter_1.pub, "foo", 0, members, null)).sign(voter_1).run_must_fail();
}