module;

import common.*;
import model.*;

/*
    NM API

    Version 1: Initial Managed Mode support
    Version 2: MustSyncUntil feature
    Version 3: Containers and Clusters
    Version 4: Blockchain.system property added (chain0, anchoring_chain are system chains)
    Version 5: Precise Configuration Update
    Version 6: Blockchain states
    Version 7: nm_get_management_chain() query added
    Version 8: Blockchain Configuration Options
    Version 9: IMPORTING blockchains added to the result set of nm_compute_blockchain_info_list() query and nm_get_blockchain_signers_in_latest_configuration() query added
    Version 10: nm_find_next_removed_blockchains() query added
    Version 11: nm_find_next_inactive_blockchains() query added
    Version 12: nm_get_container_for_blockchain_on_node() query added
    Version 13: nm_get_unarchiving_blockchain_node_info() query added
    Version 14: nm_get_blockchain_containers_for_node() query added
    Version 15: nm_get_migrating_blockchain_node_info() query added
    Version 16: migrating_blockchain_node_info.up_to_height renamed to .final_height
    Version 17: nm_find_next_removed_blockchains(), nm_get_unarchiving_blockchain_node_info(), nm_get_peer_list_version(), nm_compute_blockchain_list(), nm_get_blockchain_configuration_v5(), nm_get_container_for_blockchain_on_node() removed
    Version 18: nm_get_blockchain_configuration_v5() recovered, nm_get_blockchain_configuration_info() added
    Version 19: nm_compute_blockchain_list() recovered
*/

struct blockchain_info {
    rid: byte_array;
    system: boolean;
    state: blockchain_state;
}

struct inactive_blockchain_info {
    rid: byte_array;
    state: blockchain_state;
    height: integer;
}

struct migrating_blockchain_node_info {
    rid: byte_array;
    source_container: text;
    destination_container: text;
    is_source_node: boolean;
    is_destination_node: boolean;
    final_height: integer;
}

struct blockchain_configuration_info {
    base_config: byte_array;
    signers: list<pubkey>;
    config_hash: byte_array;
}
